{"name": "test_PrintBills", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSessionIdException: Message: A session is either terminated or not started", "trace": "self = <allure_commons._allure.fixture object at 0x0445B5D0>, args = (), kwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\nc:\\users\\victoria baretto\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\allure_commons\\_allure.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nC:\\Users\\Victoria Baretto\\PycharmProjects\\AppiumFramework09\\AppiumFramework\\tests\\conftest.py:15: in beforeClass\n    driver.quit()\nc:\\users\\victoria baretto\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:698: in quit\n    self.execute(Command.QUIT)\nc:\\users\\victoria baretto\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\nc:\\users\\victoria baretto\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:29: in check_response\n    raise wde\nc:\\users\\victoria baretto\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:24: in check_response\n    super(MobileErrorHandler, self).check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x0445B6F0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"invalid session id\",\"message\":\"A session is either terminated or not star...iles\\\\\\\\Appium\\\\\\\\resources\\\\\\\\app\\\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\method-override\\\\\\\\index.js:65:14)\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSessionIdException: Message: A session is either terminated or not started\n\nc:\\users\\victoria baretto\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: InvalidSessionIdException"}, "steps": [{"name": "App Opened", "status": "passed", "start": 1599738349496, "stop": 1599738349496}, {"name": "Clicked on allow button 1", "status": "passed", "start": 1599738349997, "stop": 1599738349997}, {"name": "Clicked on allow button 1", "status": "passed", "start": 1599738351167, "stop": 1599738351167}, {"name": "Entered License Key", "status": "passed", "start": 1599738353632, "stop": 1599738353632}, {"name": "Submitted License Key", "status": "passed", "start": 1599738358230, "stop": 1599738358230}, {"name": "Opened login Screen", "status": "passed", "start": 1599738372796, "stop": 1599738372796}, {"name": "Entered username", "status": "passed", "start": 1599738373787, "stop": 1599738373787}, {"name": "Entered password", "status": "passed", "start": 1599738375110, "stop": 1599738375110}, {"name": "Click on Login Button", "status": "passed", "start": 1599738375627, "stop": 1599738375627}, {"name": "Entered initial cash", "status": "passed", "start": 1599738377812, "stop": 1599738377812}, {"name": "Click on Initial cash submit Button", "status": "passed", "start": 1599738378377, "stop": 1599738378377}, {"name": "Clicked on POS", "status": "passed", "start": 1599738379549, "stop": 1599738379549}, {"name": "Clicked on item1", "status": "passed", "start": 1599738383195, "stop": 1599738383195}, {"name": "Clicked on item2", "status": "passed", "start": 1599738384002, "stop": 1599738384002}, {"name": "Clicked on totalAmount", "status": "passed", "start": 1599738384798, "stop": 1599738384798}, {"name": "Clicked on print bill button", "status": "passed", "start": 1599738386260, "stop": 1599738386260}, {"name": "Clicked on item1", "status": "passed", "start": 1599738390005, "stop": 1599738390005}, {"name": "Clicked on item2", "status": "passed", "start": 1599738390807, "stop": 1599738390807}, {"name": "Clicked on totalAmount", "status": "passed", "start": 1599738391588, "stop": 1599738391588}, {"name": "Clicked on print bill button", "status": "passed", "start": 1599738393049, "stop": 1599738393050}, {"name": "Clicked on item1", "status": "passed", "start": 1599738396984, "stop": 1599738396984}, {"name": "Clicked on item2", "status": "passed", "start": 1599738397796, "stop": 1599738397796}, {"name": "Clicked on totalAmount", "status": "passed", "start": 1599738398575, "stop": 1599738398575}, {"name": "Clicked on print bill button", "status": "passed", "start": 1599738400031, "stop": 1599738400031}, {"name": "Clicked on item1", "status": "passed", "start": 1599738404097, "stop": 1599738404097}, {"name": "Clicked on item2", "status": "passed", "start": 1599738404877, "stop": 1599738404878}, {"name": "Clicked on totalAmount", "status": "passed", "start": 1599738405645, "stop": 1599738405645}, {"name": "Clicked on print bill button", "status": "passed", "start": 1599738407096, "stop": 1599738407096}, {"name": "Clicked on item1", "status": "passed", "start": 1599738410968, "stop": 1599738410968}, {"name": "Clicked on item2", "status": "passed", "start": 1599738411769, "stop": 1599738411769}, {"name": "Clicked on totalAmount", "status": "passed", "start": 1599738412549, "stop": 1599738412549}, {"name": "Clicked on print bill button", "status": "passed", "start": 1599738414028, "stop": 1599738414028}, {"name": "Finished Printing 5 bills", "status": "passed", "start": 1599738414028, "stop": 1599738414028}], "attachments": [{"name": "log", "source": "8004ecd1-3b5f-4ef5-935e-2b90c656fc26-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "7e6ce9a7-734f-404c-ba47-65f18486dc9f-attachment.txt", "type": "text/plain"}], "start": 1599738349495, "stop": 1599738414029, "uuid": "51d33e12-cd6a-4841-aa45-a5a6b6a357fe", "historyId": "979b85fbfb29c2650c371ec0eb460e11", "testCaseId": "f339e742cab32a2e1205aa50c03fc1c6", "fullName": "TestSuite.PosBillPageTest#test_PrintBills", "labels": [{"name": "suite", "value": "TestSuite"}, {"name": "subSuite", "value": "PosBillPageTest"}, {"name": "host", "value": "LP-00DBDF5DBA60"}, {"name": "thread", "value": "19328-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestSuite"}]}